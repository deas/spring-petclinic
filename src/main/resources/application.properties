# database init, supports mysql too
database=h2
spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
spring.sql.init.data-locations=classpath*:db/${database}/data.sql

# Web
spring.thymeleaf.mode=HTML

# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=true

# Internationalization
spring.messages.basename=messages/messages

# Actuator
management.endpoints.web.exposure.include=*

# Logging
logging.level.org.springframework=INFO
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
spring.web.resources.cache.cachecontrol.max-age=12h

# Disable the monitoring - we want to enable it explicitly be choosing a profile
# You can disable the monitoring by setting the otel.sdk.disabled property or the OTEL_SDK_DISABLED environment variable to true.
# otel.sdk.disabled=true
# We still have to set the following to entirely disable autoconfiguration
# https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/296bd9e6a0fdcae4f92971cdcc271d8ff907f9d9/instrumentation/spring/spring-boot-autoconfigure/src/main/java/io/opentelemetry/instrumentation/spring/autoconfigure/propagators/PropagationAutoConfiguration.java#L32
# One evaluating truthy we will enable the PropagationAutoConfiguration otherwise
# otel.propagation.enabled=false

# https://opentelemetry.io/docs/languages/java/automatic/configuration/
# otel.instrumentation.common.default-enabled=false
# OTEL_INSTRUMENTATION_COMMON_DEFAULT_ENABLED

# The following are build time settings when using native
# otel.instrumentation.[name].enabled=false

# The following are enabled by default when using the spring boot starter
# https://opentelemetry.io/docs/languages/java/automatic/spring-boot/#automatic-instrumentation
# https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/spring/spring-boot-autoconfigure/src/main/java/io/opentelemetry/instrumentation/spring/autoconfigure
#
# otel.instrumentation.logback-appender.enabled=false
# otel.instrumentation.spring-web.enabled=false
# io/opentelemetry/instrumentation/spring/autoconfigure/instrumentation/webmvc/SpringWebMvc6InstrumentationAutoConfiguration.java
# otel.instrumentation.spring-webmvc.enabled=false
# contentreich.otel.instrumentation.spring.enabled=true
# otel.instrumentation.spring-webflux.enabled=false

# otlp (default - span, metrics, logs)
# prometheus (only metrics)
# jaeger (traces)
# zipkin (traces)
# logging (all)
# logging-otlp
# none,...

# Disable absolutely all telemetry
# otel.sdk.disabled=true
# otel.traces.exporter=logging
# otel.metrics.exporter=none
# otel.logs.exporter=none
# otel.instrumentation.logback-appender.enabled=false
# otel.instrumentation.spring-web.enabled=false
# otel.instrumentation.spring-webmvc.enabled=false
# otel.instrumentation.spring-webflux.enabled=false
# otel.propagation.enabled=false

# applicationinsights.connection.string=

spring.application.name=Petclinic
spring.datasource.url=jdbc:otel:h2:mem:db
spring.datasource.driver-class-name=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver

